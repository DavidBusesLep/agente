// Datasource
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Generator
generator client {
  provider = "prisma-client-js"
}

model Tenant {
  id        String  @id @default(cuid()) @map("id")
  name      String  @map("name")
  apikey    String  @unique @map("apikey")
  balance   Decimal @default(0) @map("balance")
  createdAt DateTime @default(now()) @map("created_at")
  toolsEnabled Boolean @default(false) @map("tools_enabled")

  users     User[]
  usageLogs UsageLog[]
  payments  Payment[]
  settings  Settings?

  @@map("tenants")
}

model User {
  id           String @id @default(cuid()) @map("id")
  tenantId     String @map("tenant_id")
  email        String @map("email")
  passwordHash String @map("password_hash")
  role         String @map("role")

  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@index([tenantId])
  @@unique([tenantId, email])
  @@map("users")
}

model Model {
  id                      String  @id @default(cuid()) @map("id")
  provider                String  @map("provider")
  name                    String  @map("name")
  inputCostPerMillion     Decimal @db.Decimal(10, 4) @map("input_cost_per_million")
  outputCostPerMillion    Decimal @db.Decimal(10, 4) @map("output_cost_per_million")
  isActive                Boolean @default(true) @map("is_active")

  usageLogs UsageLog[]

  @@unique([provider, name])
  @@map("models")
}

model UsageLog {
  id        String   @id @default(cuid()) @map("id")
  tenantId  String   @map("tenant_id")
  modelId   String   @map("model_id")
  tokensIn  Int      @map("tokens_in")
  tokensOut Int      @map("tokens_out")
  costUsd   Decimal  @db.Decimal(12, 6) @map("cost_usd")
  createdAt DateTime @default(now()) @map("created_at")

  tenant Tenant @relation(fields: [tenantId], references: [id])
  model  Model  @relation(fields: [modelId], references: [id])

  @@index([tenantId])
  @@index([modelId])
  @@map("usage_logs")
}

model Payment {
  id        String   @id @default(cuid()) @map("id")
  tenantId  String   @map("tenant_id")
  amount    Decimal  @db.Decimal(12, 2) @map("amount")
  currency  String   @default("USD") @map("currency")
  status    String   @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")

  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@index([tenantId])
  @@map("payments")
}

// Tenant settings for assistant system prompt and policies
model Settings {
  id           String  @id @default(cuid()) @map("id")
  tenantId     String  @unique @map("tenant_id")
  systemPrompt String  @map("system_prompt")
  temperature  Float   @default(0.2) @map("temperature")
  maxTokens    Int     @default(500) @map("max_tokens")
  modelDefault String? @map("model_default")
  aiEndpointUrl String? @map("ai_endpoint_url")
  aiForwardApiKey String? @map("ai_forward_api_key")

  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@map("settings")
}


